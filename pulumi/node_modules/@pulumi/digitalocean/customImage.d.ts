import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource which can be used to create a [custom image](https://www.digitalocean.com/docs/images/custom-images/)
 * from a URL. The URL must point to an image in one of the following file formats:
 *
 * - Raw (.img) with an MBR or GPT partition table
 * - qcow2
 * - VHDX
 * - VDI
 * - VMDK
 *
 * The image may be compressed using gzip or bzip2. See the DigitalOcean Custom
 * Image documentation for [additional requirements](https://www.digitalocean.com/docs/images/custom-images/#image-requirements).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const flatcar = new digitalocean.CustomImage("flatcar", {
 *     url: "https://stable.release.flatcar-linux.net/amd64-usr/2605.7.0/flatcar_production_digitalocean_image.bin.bz2",
 *     regions: ["nyc3"],
 * });
 * const example = new digitalocean.Droplet("example", {
 *     image: flatcar.id,
 *     region: "nyc3",
 *     size: "s-1vcpu-1gb",
 *     sshKeys: [12345],
 * });
 * ```
 */
export declare class CustomImage extends pulumi.CustomResource {
    /**
     * Get an existing CustomImage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomImageState, opts?: pulumi.CustomResourceOptions): CustomImage;
    /**
     * Returns true if the given object is an instance of CustomImage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CustomImage;
    readonly createdAt: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    readonly distribution: pulumi.Output<string | undefined>;
    readonly imageId: pulumi.Output<number>;
    readonly minDiskSize: pulumi.Output<number>;
    /**
     * A name for the Custom Image.
     */
    readonly name: pulumi.Output<string>;
    readonly public: pulumi.Output<boolean>;
    /**
     * A list of regions. (Currently only one is supported)
     */
    readonly regions: pulumi.Output<string[]>;
    readonly sizeGigabytes: pulumi.Output<number>;
    readonly slug: pulumi.Output<string>;
    readonly status: pulumi.Output<string>;
    readonly tags: pulumi.Output<string[] | undefined>;
    readonly type: pulumi.Output<string>;
    /**
     * A URL from which the custom Linux virtual machine image may be retrieved.
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a CustomImage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomImageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CustomImage resources.
 */
export interface CustomImageState {
    readonly createdAt?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly distribution?: pulumi.Input<string>;
    readonly imageId?: pulumi.Input<number>;
    readonly minDiskSize?: pulumi.Input<number>;
    /**
     * A name for the Custom Image.
     */
    readonly name?: pulumi.Input<string>;
    readonly public?: pulumi.Input<boolean>;
    /**
     * A list of regions. (Currently only one is supported)
     */
    readonly regions?: pulumi.Input<pulumi.Input<string>[]>;
    readonly sizeGigabytes?: pulumi.Input<number>;
    readonly slug?: pulumi.Input<string>;
    readonly status?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    readonly type?: pulumi.Input<string>;
    /**
     * A URL from which the custom Linux virtual machine image may be retrieved.
     */
    readonly url?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CustomImage resource.
 */
export interface CustomImageArgs {
    readonly description?: pulumi.Input<string>;
    readonly distribution?: pulumi.Input<string>;
    /**
     * A name for the Custom Image.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A list of regions. (Currently only one is supported)
     */
    readonly regions: pulumi.Input<pulumi.Input<string>[]>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A URL from which the custom Linux virtual machine image may be retrieved.
     */
    readonly url: pulumi.Input<string>;
}
