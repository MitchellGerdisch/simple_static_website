"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a DigitalOcean Droplet resource. This can be used to create,
 * modify, and delete Droplets. Droplets also support
 * [provisioning](https://www.terraform.io/docs/provisioners/index.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * // Create a new Web Droplet in the nyc2 region
 * const web = new digitalocean.Droplet("web", {
 *     image: "ubuntu-18-04-x64",
 *     region: "nyc2",
 *     size: "s-1vcpu-1gb",
 * });
 * ```
 *
 * ## Import
 *
 * Droplets can be imported using the Droplet `id`, e.g.
 *
 * ```sh
 *  $ pulumi import digitalocean:index/droplet:Droplet mydroplet 100823
 * ```
 */
class Droplet extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["backups"] = state ? state.backups : undefined;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["disk"] = state ? state.disk : undefined;
            inputs["dropletUrn"] = state ? state.dropletUrn : undefined;
            inputs["image"] = state ? state.image : undefined;
            inputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            inputs["ipv4AddressPrivate"] = state ? state.ipv4AddressPrivate : undefined;
            inputs["ipv6"] = state ? state.ipv6 : undefined;
            inputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            inputs["locked"] = state ? state.locked : undefined;
            inputs["memory"] = state ? state.memory : undefined;
            inputs["monitoring"] = state ? state.monitoring : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["priceHourly"] = state ? state.priceHourly : undefined;
            inputs["priceMonthly"] = state ? state.priceMonthly : undefined;
            inputs["privateNetworking"] = state ? state.privateNetworking : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["resizeDisk"] = state ? state.resizeDisk : undefined;
            inputs["size"] = state ? state.size : undefined;
            inputs["sshKeys"] = state ? state.sshKeys : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["userData"] = state ? state.userData : undefined;
            inputs["vcpus"] = state ? state.vcpus : undefined;
            inputs["volumeIds"] = state ? state.volumeIds : undefined;
            inputs["vpcUuid"] = state ? state.vpcUuid : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.image === undefined) {
                throw new Error("Missing required property 'image'");
            }
            if (!args || args.region === undefined) {
                throw new Error("Missing required property 'region'");
            }
            if (!args || args.size === undefined) {
                throw new Error("Missing required property 'size'");
            }
            inputs["backups"] = args ? args.backups : undefined;
            inputs["image"] = args ? args.image : undefined;
            inputs["ipv6"] = args ? args.ipv6 : undefined;
            inputs["monitoring"] = args ? args.monitoring : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["privateNetworking"] = args ? args.privateNetworking : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["resizeDisk"] = args ? args.resizeDisk : undefined;
            inputs["size"] = args ? args.size : undefined;
            inputs["sshKeys"] = args ? args.sshKeys : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["userData"] = args ? args.userData : undefined;
            inputs["volumeIds"] = args ? args.volumeIds : undefined;
            inputs["vpcUuid"] = args ? args.vpcUuid : undefined;
            inputs["createdAt"] = undefined /*out*/;
            inputs["disk"] = undefined /*out*/;
            inputs["dropletUrn"] = undefined /*out*/;
            inputs["ipv4Address"] = undefined /*out*/;
            inputs["ipv4AddressPrivate"] = undefined /*out*/;
            inputs["ipv6Address"] = undefined /*out*/;
            inputs["locked"] = undefined /*out*/;
            inputs["memory"] = undefined /*out*/;
            inputs["priceHourly"] = undefined /*out*/;
            inputs["priceMonthly"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["vcpus"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Droplet.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Droplet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Droplet(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Droplet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Droplet.__pulumiType;
    }
}
exports.Droplet = Droplet;
/** @internal */
Droplet.__pulumiType = 'digitalocean:index/droplet:Droplet';
//# sourceMappingURL=droplet.js.map