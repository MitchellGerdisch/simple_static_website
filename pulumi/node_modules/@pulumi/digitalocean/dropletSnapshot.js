"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a resource which can be used to create a snapshot from an existing DigitalOcean Droplet.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const web = new digitalocean.Droplet("web", {
 *     size: "s-1vcpu-1gb",
 *     image: "centos-7-x64",
 *     region: "nyc3",
 * });
 * const web_snapshot = new digitalocean.DropletSnapshot("web-snapshot", {dropletId: web.id});
 * ```
 *
 * ## Import
 *
 * Droplet Snapshots can be imported using the `snapshot id`, e.g.
 *
 * ```sh
 *  $ pulumi import digitalocean:index/dropletSnapshot:DropletSnapshot mysnapshot 123456
 * ```
 */
class DropletSnapshot extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["dropletId"] = state ? state.dropletId : undefined;
            inputs["minDiskSize"] = state ? state.minDiskSize : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["regions"] = state ? state.regions : undefined;
            inputs["size"] = state ? state.size : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.dropletId === undefined) {
                throw new Error("Missing required property 'dropletId'");
            }
            inputs["dropletId"] = args ? args.dropletId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["createdAt"] = undefined /*out*/;
            inputs["minDiskSize"] = undefined /*out*/;
            inputs["regions"] = undefined /*out*/;
            inputs["size"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DropletSnapshot.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing DropletSnapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DropletSnapshot(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DropletSnapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DropletSnapshot.__pulumiType;
    }
}
exports.DropletSnapshot = DropletSnapshot;
/** @internal */
DropletSnapshot.__pulumiType = 'digitalocean:index/dropletSnapshot:DropletSnapshot';
//# sourceMappingURL=dropletSnapshot.js.map