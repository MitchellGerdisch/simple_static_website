"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides access to the available DigitalOcean Kubernetes Service versions.
 *
 * ## Example Usage
 * ### Output a list of all available versions
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const example = digitalocean.getKubernetesVersions({});
 * export const k8s_versions = example.then(example => example.validVersions);
 * ```
 * ### Create a Kubernetes cluster using the most recent version available
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const example = digitalocean.getKubernetesVersions({});
 * const example_cluster = new digitalocean.KubernetesCluster("example-cluster", {
 *     region: "lon1",
 *     version: example.then(example => example.latestVersion),
 *     nodePool: {
 *         name: "default",
 *         size: "s-1vcpu-2gb",
 *         nodeCount: 3,
 *     },
 * });
 * ```
 * ### Pin a Kubernetes cluster to a specific minor version
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const example = digitalocean.getKubernetesVersions({
 *     versionPrefix: "1.16.",
 * });
 * const example_cluster = new digitalocean.KubernetesCluster("example-cluster", {
 *     region: "lon1",
 *     version: example.then(example => example.latestVersion),
 *     nodePool: {
 *         name: "default",
 *         size: "s-1vcpu-2gb",
 *         nodeCount: 3,
 *     },
 * });
 * ```
 */
function getKubernetesVersions(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("digitalocean:index/getKubernetesVersions:getKubernetesVersions", {
        "versionPrefix": args.versionPrefix,
    }, opts);
}
exports.getKubernetesVersions = getKubernetesVersions;
//# sourceMappingURL=getKubernetesVersions.js.map