import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import { Region } from "./index";
/**
 * ## Import
 *
 * Before importing a Kubernetes cluster, the cluster's default node pool must be tagged with the `terraform:default-node-pool` tag. The provider will automatically add this tag if the cluster has a single node pool. Clusters with more than one node pool, however, will require that you manually add the `terraform:default-node-pool` tag to the node pool that you intend to be the default node pool. Then the Kubernetes cluster and all of its node pools can be imported using the cluster's `id`, e.g.
 *
 * ```sh
 *  $ pulumi import digitalocean:index/kubernetesCluster:KubernetesCluster mycluster 1b8b2100-0e9f-4e8f-ad78-9eb578c2a0af
 * ```
 */
export declare class KubernetesCluster extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesClusterState, opts?: pulumi.CustomResourceOptions): KubernetesCluster;
    /**
     * Returns true if the given object is an instance of KubernetesCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KubernetesCluster;
    /**
     * A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
     */
    readonly autoUpgrade: pulumi.Output<boolean | undefined>;
    /**
     * The range of IP addresses in the overlay network of the Kubernetes cluster.
     */
    readonly clusterSubnet: pulumi.Output<string>;
    /**
     * The date and time when the node was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The base URL of the API server on the Kubernetes master node.
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * The public IPv4 address of the Kubernetes master node.
     */
    readonly ipv4Address: pulumi.Output<string>;
    readonly kubeConfigs: pulumi.Output<outputs.KubernetesClusterKubeConfig[]>;
    /**
     * A name for the node pool.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A block representing the cluster's default node pool. Additional node pools may be added to the cluster using the `digitalocean.KubernetesNodePool` resource. The following arguments may be specified:
     */
    readonly nodePool: pulumi.Output<outputs.KubernetesClusterNodePool>;
    /**
     * The slug identifier for the region where the Kubernetes cluster will be created.
     */
    readonly region: pulumi.Output<Region>;
    /**
     * The range of assignable IP addresses for services running in the Kubernetes cluster.
     */
    readonly serviceSubnet: pulumi.Output<string>;
    /**
     * A string indicating the current status of the individual node.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Enable/disable surge upgrades for a cluster. Default: false
     */
    readonly surgeUpgrade: pulumi.Output<boolean | undefined>;
    /**
     * A list of tag names to be applied to the Kubernetes cluster.
     */
    readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The date and time when the node was last updated.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * The slug identifier for the version of Kubernetes used for the cluster. Use [doctl](https://github.com/digitalocean/doctl) to find the available versions `doctl kubernetes options versions`. (**Note:** A cluster may only be upgraded to newer versions in-place. If the version is decreased, a new resource will be created.)
     */
    readonly version: pulumi.Output<string>;
    /**
     * The ID of the VPC where the Kubernetes cluster will be located.
     */
    readonly vpcUuid: pulumi.Output<string>;
    /**
     * Create a KubernetesCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KubernetesClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering KubernetesCluster resources.
 */
export interface KubernetesClusterState {
    /**
     * A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
     */
    readonly autoUpgrade?: pulumi.Input<boolean>;
    /**
     * The range of IP addresses in the overlay network of the Kubernetes cluster.
     */
    readonly clusterSubnet?: pulumi.Input<string>;
    /**
     * The date and time when the node was created.
     */
    readonly createdAt?: pulumi.Input<string>;
    /**
     * The base URL of the API server on the Kubernetes master node.
     */
    readonly endpoint?: pulumi.Input<string>;
    /**
     * The public IPv4 address of the Kubernetes master node.
     */
    readonly ipv4Address?: pulumi.Input<string>;
    readonly kubeConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterKubeConfig>[]>;
    /**
     * A name for the node pool.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A block representing the cluster's default node pool. Additional node pools may be added to the cluster using the `digitalocean.KubernetesNodePool` resource. The following arguments may be specified:
     */
    readonly nodePool?: pulumi.Input<inputs.KubernetesClusterNodePool>;
    /**
     * The slug identifier for the region where the Kubernetes cluster will be created.
     */
    readonly region?: pulumi.Input<Region>;
    /**
     * The range of assignable IP addresses for services running in the Kubernetes cluster.
     */
    readonly serviceSubnet?: pulumi.Input<string>;
    /**
     * A string indicating the current status of the individual node.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * Enable/disable surge upgrades for a cluster. Default: false
     */
    readonly surgeUpgrade?: pulumi.Input<boolean>;
    /**
     * A list of tag names to be applied to the Kubernetes cluster.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The date and time when the node was last updated.
     */
    readonly updatedAt?: pulumi.Input<string>;
    /**
     * The slug identifier for the version of Kubernetes used for the cluster. Use [doctl](https://github.com/digitalocean/doctl) to find the available versions `doctl kubernetes options versions`. (**Note:** A cluster may only be upgraded to newer versions in-place. If the version is decreased, a new resource will be created.)
     */
    readonly version?: pulumi.Input<string>;
    /**
     * The ID of the VPC where the Kubernetes cluster will be located.
     */
    readonly vpcUuid?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a KubernetesCluster resource.
 */
export interface KubernetesClusterArgs {
    /**
     * A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
     */
    readonly autoUpgrade?: pulumi.Input<boolean>;
    /**
     * A name for the node pool.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A block representing the cluster's default node pool. Additional node pools may be added to the cluster using the `digitalocean.KubernetesNodePool` resource. The following arguments may be specified:
     */
    readonly nodePool: pulumi.Input<inputs.KubernetesClusterNodePool>;
    /**
     * The slug identifier for the region where the Kubernetes cluster will be created.
     */
    readonly region: pulumi.Input<Region>;
    /**
     * Enable/disable surge upgrades for a cluster. Default: false
     */
    readonly surgeUpgrade?: pulumi.Input<boolean>;
    /**
     * A list of tag names to be applied to the Kubernetes cluster.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The slug identifier for the version of Kubernetes used for the cluster. Use [doctl](https://github.com/digitalocean/doctl) to find the available versions `doctl kubernetes options versions`. (**Note:** A cluster may only be upgraded to newer versions in-place. If the version is decreased, a new resource will be created.)
     */
    readonly version: pulumi.Input<string>;
    /**
     * The ID of the VPC where the Kubernetes cluster will be located.
     */
    readonly vpcUuid?: pulumi.Input<string>;
}
